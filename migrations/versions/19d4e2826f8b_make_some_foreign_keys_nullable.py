"""make some foreign keys nullable

Revision ID: 19d4e2826f8b
Revises: 9ac9aa31af5d
Create Date: 2023-02-13 21:13:23.378264

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '19d4e2826f8b'
down_revision = '9ac9aa31af5d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('comments', schema='comments') as batch_op:
        batch_op.alter_column('sun_post_id',
               existing_type=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('sun_subreddit_id',
               existing_type=sa.BIGINT(),
               nullable=True)

    with op.batch_alter_table('posts', schema='posts') as batch_op:
        batch_op.alter_column('sun_subreddit_id',
               existing_type=sa.BIGINT(),
               nullable=True)

    # ### end Alembic commands ###


def downgrade():
    try:
       with op.batch_alter_table('posts', schema='posts') as batch_op:
              batch_op.alter_column('sun_subreddit_id',
                     existing_type=sa.BIGINT(),
                     nullable=False)

       with op.batch_alter_table('comments', schema='comments') as batch_op:
              batch_op.alter_column('sun_subreddit_id',
                     existing_type=sa.BIGINT(),
                     nullable=False)
              batch_op.alter_column('sun_post_id',
                     existing_type=sa.BIGINT(),
                     nullable=False)

       
    except Exception as e:
       logger.info("""
       Failed to set these columns to non-nullable:

       posts.sun_subreddit_id
       comments.sun_subreddit_id
       comments.sun_post_id

       You won't be able set these columns back to non-nullable without finding the ids and filling in the data.
       """)




