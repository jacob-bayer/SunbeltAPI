schema {
    query: Query
    mutation: Mutation
}

input OrderByInput {
  sun_unique_id: Sort
}

enum Sort {
  asc
  desc
}

type Subreddit {
    sun_subreddit_id: Int!
    reddit_subreddit_id: String
    reddit_unique_id : String
    sun_unique_id: Int
    url: String
    sun_created_at: String
    display_name_prefixed: String
    title: String
    display_name: String
    created: Float
    lang: String
    created_utc: Float
    version_count: Int
    versions: [SubredditDetail]
    active_user_count: Int
    accounts_active: Int
    public_traffic: Boolean
    subscribers: Int
    most_recent_version_updated_at: String
    most_recent_sun_version_id: Int
    most_recent_sun_detail_id: Int

}

type SubredditDetail {
    sun_subreddit_detail_id : Int!
    sun_created_at: String
    sun_detail_id : Int!
    sun_version_id: Int!
    sun_unique_id: Int!
    active_user_count : Int
    accounts_active : Int
    public_traffic : Boolean
    subscribers : Int
    subreddit_type : String
    suggested_comment_sort : String
    allow_polls : Boolean
    collapse_deleted_comments : Boolean
}

type Post {
    sun_post_id: Int!
    reddit_post_id: String
    reddit_account_id: String
    reddit_subreddit_id: String
    reddit_unique_id : String
    sun_unique_id: Int
    sun_account_id: Int
    sun_subreddit_id: Int
    most_recent_sun_version_id: Int
    most_recent_sun_detail_id: Int
    title: String
    permalink : String
    author : Account
    subreddit : Subreddit
    versions : [PostDetail]
    sun_created_at : String
    deleted : Boolean
    edited : Boolean
    removed: Boolean
    score : Int
    version_count: Int
    selftext : String
    detail : PostDetail
    ups : Int
    downs : Int
    upvote_ratio : Float
    created_utc : Float
    num_comments : Int
    most_recent_version_updated_at : String

}

type PostDetail {
    sun_post_detail_id : Int!
    sun_post_version_id: Int!
    sun_post_id: Int!
    sun_detail_id : Int!
    sun_version_id: Int!
    sun_unique_id: Int!
    sun_created_at : String
    selftext : String
    downs : Int
    ups : Int
    upvote_ratio : Float
    score : Int
    num_comments : Int
    created_utc : Float
    deleted : Boolean
    edited : Boolean
    removed: Boolean
    post_type : String
    author_cakeday : Boolean
    author_has_subscribed : Boolean
    author_is_mod : Boolean
    author_flair_type : String
    total_awards_received : String
}

type Comment {
    sun_comment_id: Int!
    sun_post_id: Int
    sun_subreddit_id: Int
    sun_account_id: Int
    sun_unique_id: Int!
    reddit_comment_id: String
    reddit_unique_id : String
    reddit_parent_id: String
    reddit_post_id: String
    reddit_account_id: String
    reddit_subreddit_id: String
    most_recent_sun_version_id: Int
    most_recent_sun_detail_id: Int
    sun_created_at: String
    created_utc: Float
    depth: String
    permalink: String
    is_submitter: Boolean
    created: Float
    version_count: Int
    ups: Int
    downs: Int
    score: Int
    body: String
    controversiality: Int
    edited: Int
    deleted: Boolean
    removed: Boolean
    versions: [CommentDetail]
    author: Account
    post: Post
    subreddit: Subreddit
    author_cakeday: Boolean
    author_has_subscribed: Boolean
    author_is_mod: Boolean
    comment_type: String
    author_flair_type: String
    total_awards_received: String
    author_flair_template_id: String
    mod_reason_title: String
    gilded: String
    archived: Boolean
    collapsed_reason_code: String
    no_follow: Boolean
    can_mod_post: Boolean
    send_replies: Boolean
    mod_note: String
    collapsed: Boolean
    top_awarded_type: String
    author_flair_css_class: String
    author_patreon_flair: Boolean
    body_html: String
    removal_reason: String
    collapsed_reason: String
    distinguished: String
    associated_award: String
    stickied: Boolean
    author_premium: Boolean
    can_gild: Boolean
    unrepliable_reason: String
    author_flair_text_color: String
    score_hidden: Boolean
    subreddit_type: String
    locked: Boolean
    report_reasons: String
    author_flair_text: String
    most_recent_version_updated_at: String
    upvote_ratio : Float
}

type CommentDetail {
    sun_comment_detail_id : Int!
    sun_comment_version_id: Int!
    sun_detail_id : Int!
    sun_version_id: Int!
    sun_unique_id: Int!
    sun_created_at: String
    body : String
    downs : Int
    ups : Int
    upvote_ratio : Float
    score : Int
    controversiality : Int
    deleted : Boolean
    edited : Boolean
    removed: Boolean
    author_cakeday : Boolean
    author_has_subscribed : Boolean
    author_is_mod : Boolean
    comment_type : String
    author_flair_type : String
    total_awards_received : String
    author_flair_template_id : String
}

type Account {
    sun_account_id: Int!
    sun_created_at: String
    reddit_unique_id : String
    sun_unique_id: Int
    name: String
    version_count: Int
    reddit_account_id: String
    comment_karma: Int
    link_karma: Int
    total_karma: Int
    awardee_karma: Int
    awarder_karma: Int
    listing_use_sort: Boolean
    is_employee: Boolean
    snoovatar_size: String
    verified: Boolean
    is_gold: Boolean
    icon_img: String
    hide_from_robots: Boolean
    deleted: Boolean
    is_suspended: Boolean
    most_recent_version_updated_at: String
}

type AccountDetail {
    sun_account_detail_id : Int!
    sun_detail_id : Int!
    sun_version_id: Int!
    sun_unique_id: Int!
    sun_created_at : String
    deleted : Boolean
    is_suspended : Boolean
    comment_karma : Int
    link_karma : Int
    total_karma : Int
    awardee_karma : Int
    awarder_karma : Int
    listing_use_sort : Boolean
    is_employee : Boolean
    snoovatar_size : String
    verified : Boolean
    is_gold : Boolean
    icon_img : String
    hide_from_robots : Boolean
    pref_show_snoovatar : Boolean
    snoovatar_img : String
    accept_followers : Boolean
}


type WriteResult {
    sun_unique_id: Int
    most_recent_version_id: Int
    most_recent_detail_id: Int
}

type SunObjectsResult {
    success: Boolean!
    errors: [String]
    objs_created : [WriteResult]
}


type PostResult {
    success: Boolean!
    errors: [String]
    post: Post
    created_new_version: Boolean
}

type PostsResult {
    success: Boolean!
    errors: [String]
    posts: [Post]
}

type PostDetailResult {
    success: Boolean!
    errors: [String]
    postdetail: PostDetail
}

type PostDetailsResult {
    success: Boolean!
    errors: [String]
    postdetails: [PostDetail]
}

type CommentResult {
    success: Boolean!
    errors: [String]
    comment: Comment
    created_new_version: Boolean
}

type CommentsResult {
    success: Boolean!
    errors: [String]
    comments: [Comment]
}

type CommentDetailResult {
    success: Boolean!
    errors: [String]
    commentdetail: CommentDetail
}

type CommentDetailsResult {
    success: Boolean!
    errors: [String]
    commentdetails: [CommentDetail]
}

type AccountResult {
    success: Boolean!
    errors: [String]
    account: Account
    created_new_version: Boolean
}

type AccountsResult {
    success: Boolean!
    errors: [String]
    accounts: [Account]
}

type AccountDetailResult {
    success: Boolean!
    errors: [String]
    accountdetail: AccountDetail
}

type AccountDetailsResult {
    success: Boolean!
    errors: [String]
    accountdetails: [AccountDetail]
}

type SubredditResult {
    success: Boolean!
    errors: [String]
    subreddit: Subreddit
    created_new_version: Boolean
}

type SubredditsResult {
    success: Boolean!
    errors: [String]
    subreddits: [Subreddit]
}

type SubredditDetailResult {
    success: Boolean!
    errors: [String]
    subredditdetail: SubredditDetail
}

type SubredditDetailsResult {
    success: Boolean!
    errors: [String]
    subredditdetails: [SubredditDetail]
}

type Query {
    post(byId: ID, reddit_id: String): PostResult!
    postdetail(byId: Int!): PostDetailResult!
    postdetails(sun_unique_id: Int, sun_post_id: Int): PostDetailsResult!
    posts(reddit_ids: [String],
          postedBefore: String,
          postedAfter: String,
          updatedBefore: String, 
          updatedAfter: String,
          orderBy: OrderByInput,
          sun_subreddit_id: Int,
          sun_account_id: Int,
          limit: Int): PostsResult!

    comment(byId: ID, reddit_id: String): CommentResult!
    commentdetail(byId: Int!): CommentDetailResult!
    commentdetails(sun_unique_id: Int, sun_comment_id: Int): CommentDetailsResult!
    comments(reddit_ids: [String],
          commentedBefore: String,
          commentedAfter: String,
          updatedBefore: String, 
          updatedAfter: String,
          orderBy: OrderByInput,
          sun_post_id: Int,
          sun_subreddit_id: Int,
            sun_account_id: Int,
          limit: Int): CommentsResult!

    account(byId: ID, reddit_id: String, name: String): AccountResult!
    accountdetail(byId: Int!): AccountDetailResult!
    accountdetails(sun_unique_id: Int, sun_account_id: Int): AccountDetailsResult!
    accounts(createdBefore: String,
          createdAfter: String,
          updatedBefore: String, 
          updatedAfter: String,
          orderBy: OrderByInput,
          limit: Int): AccountsResult!

    subreddit(byId: ID, reddit_id: String, name: String): SubredditResult!
    subredditdetail(byId: Int!): SubredditDetailResult!
    subredditdetails(sun_unique_id: Int, sun_subreddit_id: Int): SubredditDetailsResult!
    subreddits(
          names: [String],
          createdBefore: String,
          createdAfter: String,
          updatedBefore: String, 
          updatedAfter: String,
          orderBy: OrderByInput,
          limit: Int): SubredditsResult!
}


type Mutation {
    createSunobjects(from_json: String!): SunObjectsResult!
    createComment(from_json: String!): CommentResult!
    createPost(from_json: String!): PostResult!
    createAccount(from_json: String!): AccountResult!
    createSubreddit(from_json: String!): SubredditResult!
}


